######################################
# Target:    Nuvoton NUC980
######################################

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME nuc980
}

# Nuvoton NUC980 series MCUs are always little endian as per datasheet.
set _ENDIAN little

if { [info exists CPUTAPID] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x07926f0f
}

#NUC980 has following IDs:
# CP15.0 register 0x41069265
# CP15.1 register 0x1d152152
# ARM core 0x07926f0f


# jtag transport only
transport select jtag
adapter speed 1000

#use combined on interfaces or targets that can't set TRST/SRST separately
reset_config trst_and_srst 

 adapter srst pulse_width 10
 adapter srst delay 200

jtag_ntrst_assert_width 5
jtag_ntrst_delay 10


#
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
#jtag newtap $_CHIPNAME dap -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID


######################
# Target configuration
######################

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME arm926ejs -endian $_ENDIAN -chain-position $_TARGETNAME
#target create $_TARGETNAME arm926ejs -endian $_ENDIAN -chain-position $_CHIPNAME.dap


# Internal SRAM (16kB): 0x3c000000 (0xbc000000)

# Use internal SRAM as working area (16kB total).
$_TARGETNAME configure -work-area-phys 0x3c000000 -work-area-size 0x4000 -work-area-backup 0
# $_TARGETNAME configure -work-area-phys 0x3c000000 -work-area-size 0x4000 -work-area-backup 1
# $_TARGETNAME configure -work-area-phys 0x1F00000 -work-area-size 0x100000 -work-area-backup 0

 

reset_config trst_and_srst srst_pulls_trst

$_TARGETNAME configure -event reset-start { 

    echo "\nSet JTAG Speed 1000 kHz\n"
    adapter speed 1000 
    
    # Halt the CPU.
	halt

	# Disable faster memory access for now.
    arm7_9 dcc_downloads disable
	arm7_9 fast_memory_access disable
}

$_TARGETNAME configure -event reset-assert { echo "Target NUC980 reset..." }


 $_TARGETNAME configure -event reset-init {
	# switch on PLL for 300MHz operation
	# running from 12MHz input clock
	echo "\nRunning reset init script for NUC980 ..."
	#halt
	#wait_halt
	
     mww 0xB0000264 0xC0000018 ;# Set CLK UPLLCON
     mww 0xB0000220 0x01000018 ;# Set CLK DIVCTL0
     
     sleep 10
     echo "Set JTAG Speed 30000 kHz"
     adapter speed 30000
     
     arm7_9 dcc_downloads enable
 	 arm7_9 fast_memory_access enable
     
     mww 0xB0002028 0x53DCD84A ;# 
     mww 0xB0002008 0x00008014 ;#
     mww 0xB0002000 0x0003047E ;#
     mww 0xB0002004 0x00000021 ;#
     mww 0xB0002004 0x00000023 ;#
     mww 0xB0002004 0x00000027 ;#
     mww 0xB0002020 0x00000000 ;#
     mww 0xB0002024 0x00000000 ;#
     mww 0xB000201C 0x00004000 ;#
     mww 0xB0002018 0x00000332 ;#
     mww 0xB0002010 0x00000006 ;#
     mww 0xB0002004 0x00000027 ;#
     mww 0xB0002004 0x0000002B ;#
     mww 0xB0002004 0x0000002B ;#
     mww 0xB0002004 0x0000002B ;#
     mww 0xB0002018 0x00000232 ;#
     mww 0xB000201C 0x00004781 ;#
     mww 0xB000201C 0x00004401 ;#
     mww 0xB0002004 0x00000020 ;#
     mww 0xB0002034 0x00888828 ;#
     
#      mww 0xB0000000 0x00000003
#      mww 0xB0000264 0xC0000018
#      mww 0xB0000220 0x01000018
#      
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      
#      echo "Set JTAG Speed 30000 kHz"
#      adapter speed 30000
#      
#      arm7_9 dcc_downloads enable
# 	  arm7_9 fast_memory_access enable
#      
#      mww 0xB0002028 0x53DCD84A
#      mww 0xB0002008 0x00008014
#      
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      
#      mww 0xB0002000 0x0003047E
#      
#      mww 0x55AA55AA 0x1
#      
#      mww 0xB0002004 0x00000021
#      
#      mww 0x55AA55AA 0x1
#      
#      mww 0xB0002004 0x00000023
#      
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      
#      mww 0xB0002004 0x00000027
#      mww 0xB0002020 0x00000000
#      mww 0xB0002024 0x00000000
#      mww 0xB000201C 0x00004000
#      mww 0xB0002018 0x00000332
#      mww 0xB0002010 0x00000006
#      mww 0xB0002004 0x00000027
#      
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      
#      mww 0xB0002004 0x0000002B
#      mww 0xB0002004 0x0000002B
#      mww 0xB0002004 0x0000002B
#      mww 0xB0002018 0x00000232
#      mww 0xB000201C 0x00004781
#      mww 0xB000201C 0x00004401
#      mww 0xB0002004 0x00000020
#      mww 0xB0002030 0x00000000
#      mww 0xB0002034 0x004444D8
#      
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1
#      mww 0x55AA55AA 0x1

	
	echo "\n"
}